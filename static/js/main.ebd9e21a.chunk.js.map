{"version":3,"sources":["components/Grid/Square/Square.js","components/Grid/Square/SquareType.js","components/Grid/Helper.js","Node/Node.js","Algorithm/common.js","Algorithm/DFS.js","Algorithm/BFS.js","Algorithm/AlgoType.js","Algorithm/Astar.js","Algorithm/GreedyBFS.js","Algorithm/BiDirectional.js","components/Grid/Grid.js","components/Info/Info.js","components/Header/Header.js","App.js","serviceWorker.js","index.js"],"names":["Square","props","onMouseDown","event","isAllowEdit","currState","state","button","setState","prevState","isMouseClicked","target","className","selectSpecial","row","col","onMouseOver","isSpecialSquare","specialType","moveSpecial","$","removeClass","addClass","isSpecialClicked","isConflictingSquares","onMouseLeave","relatedTarget","componentDidUpdate","grid","this","id","Component","initializeGrid","startRow","startCol","goalRow","goalCol","rowSize","colSize","Array","i","fill","Node","parent","actualCost","heuristicCost","getParent","getRow","getCol","getId","getActualCost","getTotalCost","getStartSquare","COL_SIZE","startSquare","Math","floor","attr","getGoalSquare","goalSquare","getGoalPosition","addVisited","counter","setTimeout","left","right","PriorityQueue","comparator","a","b","_heap","_comparator","length","size","values","forEach","value","push","_siftUp","poppedValue","peek","bottom","_swap","pop","_siftDown","replacedValue","j","node","_greater","maxChild","dfs","ROW_SIZE","stack","visited","path","currNode","temp","addNode","unshift","shift","slice","tempCount","curr","currId","includes","newNode","bfs","queue","queueId","GREEDY","Astar","pqueue","n1","n2","abs","greedyBFS","biDirectional","queueStart","queueGoal","queueStartId","queueGoalId","visitedStart","visitedGoal","isStart","console","log","parseInt","Grid","resetGrid","onMouseUp","specialRow","specialCol","type","elRef","visualize","delayAnimation","algo","prevVisited","prevPath","square","style","textAlign","marginTop","width","hidden","Button","disabled","variant","onClick","marginLeft","lineHeight","map","rowIdx","key","colIdx","Info","Header","Navbar","expand","bg","Brand","href","Nav","NavDropdown","title","Item","onSelect","onSelectAlgo","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ebd9e21a.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport $ from 'jquery';\r\n\r\nimport { START_SQUARE, GOAL_SQUARE, UNVISITED_SQUARE, WALL_SQUARE } from './SquareType';\r\n\r\nclass Square extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tcurrState: this.props.grid[this.props.row][this.props.col], //Initial State\r\n\t\t\tprevState: UNVISITED_SQUARE\r\n\t\t}\r\n\t}\r\n\r\n\tonMouseDown = (event) => {\r\n\t\tif (this.props.isAllowEdit) {\r\n\t\t\tlet currState = this.state.currState;\r\n\t\t\tif (!event || event.button === 0) { //Only allow left click\r\n\t\t\t\tswitch(currState) {\r\n\t\t\t\t\tcase UNVISITED_SQUARE:\r\n\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\tcurrState: WALL_SQUARE,\r\n\t\t\t\t\t\t\tprevState: UNVISITED_SQUARE\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase WALL_SQUARE:\r\n\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\tcurrState: UNVISITED_SQUARE,\r\n\t\t\t\t\t\t\tprevState: WALL_SQUARE\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase START_SQUARE:\r\n\t\t\t\t\tcase GOAL_SQUARE:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (!this.props.isMouseClicked) { //Not allowed to move special squares if currently creating walls\r\n\t\t\t\t\t\t\tif (event.target.className !== currState) { //Check if classname not matched with currstate because of moving special sqaures\r\n\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\tcurrState: UNVISITED_SQUARE\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tthis.props.selectSpecial(currState, this.props.row, this.props.col);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} \r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tonMouseOver = (event) => {\r\n\t\tif ((event.target.className !== this.state.currState) \r\n\t\t\t\t\t&& this.isSpecialSquare(this.state.currState)) { //Preventing unmatched class name with curr state caused by moving special squares\r\n\t\t\tif (this.props.specialType) {\r\n\t\t\t\tthis.props.moveSpecial(this.props.row, this.props.col);\r\n\t\t\t\t$(event.target).removeClass();\r\n\t\t\t\t$(event.target).addClass(this.props.specialType);\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tcurrState: this.props.specialType\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tcurrState: event.target.className\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.props.isMouseClicked) {\r\n\t\t\tif (this.props.isSpecialClicked && !this.isConflictingSquares(this.props.specialType)) {\r\n\t\t\t\tif (this.isSpecialSquare(this.state.currState)) {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tcurrState: this.props.specialType,\r\n\t\t\t\t\t\tprevState: UNVISITED_SQUARE\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tprevState: this.state.currState,\r\n\t\t\t\t\t\tcurrState: this.props.specialType,\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis.props.moveSpecial(this.props.row, this.props.col);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthis.onMouseDown();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tonMouseLeave = (event) =>{\r\n\t\tif (this.props.isSpecialClicked \r\n\t\t\t\t\t&& (!this.isConflictingSquares(this.props.specialType))\r\n\t\t\t\t\t&& (!this.isConflictingSquares(event.relatedTarget.className))) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tcurrState: this.state.prevState,\r\n\t\t\t});\r\n\t\t}\t\r\n\t}\r\n\r\n\tisConflictingSquares = (state) => {\r\n\t\treturn (this.state.currState === GOAL_SQUARE && state === START_SQUARE)\r\n\t\t\t|| (this.state.currState === START_SQUARE && state === GOAL_SQUARE);\r\n\t}\r\n\r\n\tisSpecialSquare = (state) => {\r\n\t\treturn (state === GOAL_SQUARE) || (state === START_SQUARE);\r\n\t}\r\n\r\n\tcomponentDidUpdate = () => { //Update the state of this square to the whole grid\r\n\t\tthis.props.grid[this.props.row][this.props.col] = this.state.currState;\r\n\r\n\t\t// console.log(this.props.grid); //FOR DEBUGGING\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<td className={this.state.currState} \r\n\t\t\t\t\tonMouseDown={this.onMouseDown}\r\n\t\t\t\t\tonMouseOver={this.onMouseOver}\r\n\t\t\t\t\tonMouseLeave={this.onMouseLeave}\r\n\t\t\t\t\tid={this.props.id} />\r\n\t\t)\r\n\t}\r\n}\r\n\r\nSquare.propTypes = {\r\n\trow: PropTypes.number,\r\n\tcol: PropTypes.number,\r\n\tisMouseClicked: PropTypes.bool,\r\n\tisSpecialClicked: PropTypes.bool,\r\n\tspecialType: PropTypes.string,\r\n\tselectSpecial: PropTypes.func,\r\n\tmoveSpecial: PropTypes.func,\r\n\tgrid: PropTypes.array\r\n}\r\n\r\nexport default Square;","export const START_SQUARE = 'start';\r\nexport const GOAL_SQUARE = 'goal';\r\nexport const VISITED_SQUARE = 'visited';\r\nexport const UNVISITED_SQUARE = 'unvisited';\r\nexport const WALL_SQUARE = 'wall';\r\nexport const PATH_SQUARE = 'path';\r\n\r\n","import { UNVISITED_SQUARE, START_SQUARE, GOAL_SQUARE } from './Square/SquareType';\r\n\r\nexport const initializeGrid = (startRow, startCol, goalRow, goalCol, rowSize, colSize) => {\r\n\r\n  let grid = new Array(rowSize);\r\n  for (let i = 0; i < rowSize; i++)\r\n    grid[i] = new Array(colSize).fill(UNVISITED_SQUARE);\r\n\r\n  grid[startRow][startCol] = START_SQUARE;\r\n  grid[goalRow][goalCol] = GOAL_SQUARE;\r\n\r\n  return grid;\r\n}\r\n","class Node {\r\n  constructor(row, col, id, parent, actualCost, heuristicCost) {\r\n    this.row = row;\r\n    this.col = col;\r\n    this.id = id;\r\n    this.parent = parent;\r\n    this.actualCost = actualCost;\r\n    this.heuristicCost = heuristicCost;\r\n  }\r\n\r\n  getParent = () => this.parent;\r\n\r\n  getRow = () => this.row;\r\n\r\n  getCol = () => this.col;\r\n\r\n  getId = () => this.id;\r\n\r\n  getActualCost = () => this.actualCost;\r\n\r\n  getTotalCost = () => this.heuristicCost + this.actualCost;\r\n}\r\n\r\nexport default Node;","import $ from 'jquery';\r\n\r\nimport Node from '../Node/Node';\r\nimport { START_SQUARE, UNVISITED_SQUARE, VISITED_SQUARE, GOAL_SQUARE } from '../components/Grid/Square/SquareType';\r\n\r\nexport const getStartSquare = (COL_SIZE) => {\r\n  const startSquare = $('.' + START_SQUARE);\r\n  const row = Math.floor(startSquare.attr('id') / COL_SIZE);\r\n  const col = startSquare.attr('id') % COL_SIZE\r\n  const id = row * COL_SIZE + col;\r\n  \r\n  return new Node(row, col, id, null, 0, 0);\r\n};\r\n\r\nexport const getGoalSquare = (COL_SIZE) => {\r\n  const goalSquare = $('.' + GOAL_SQUARE);\r\n  const row = Math.floor(goalSquare.attr('id') / COL_SIZE);\r\n  const col = goalSquare.attr('id') % COL_SIZE\r\n  const id = row * COL_SIZE + col;\r\n  \r\n  return new Node(row, col, id, null, 0, 0);\r\n};\r\n\r\nexport const getGoalPosition = (COL_SIZE) => {\r\n  const startSquare = $('.' + GOAL_SQUARE);\r\n  const row = Math.floor(startSquare.attr('id') / COL_SIZE);\r\n  const col = startSquare.attr('id') % COL_SIZE\r\n  \r\n  return [row, col];\r\n};\r\n\r\nexport const addVisited = (id, counter) => {\r\n\tsetTimeout(() => {\r\n    $('#' + id).removeClass(UNVISITED_SQUARE);\r\n    \r\n    if ($('#' + id).attr('class') === \"\") {\r\n      $('#' + id).addClass(VISITED_SQUARE);\r\n    }\r\n\t}, Math.floor(counter / 10) * 100);\r\n};\r\n\r\nconst top = 0;\r\nconst parent = i => ((i + 1) >>> 1) - 1;\r\nconst left = i => (i << 1) + 1;\r\nconst right = i => (i + 1) << 1;\r\n\r\nexport class PriorityQueue {\r\n\r\n  constructor(comparator = (a, b) => a > b) {\r\n    this._heap = [];\r\n    this._comparator = comparator;\r\n  }\r\n  size() {\r\n    return this._heap.length;\r\n  }\r\n  isEmpty() {\r\n    return this.size() === 0;\r\n  }\r\n  peek() {\r\n    return this._heap[top];\r\n  }\r\n  push(...values) {\r\n    values.forEach(value => {\r\n      this._heap.push(value);\r\n      this._siftUp();\r\n    });\r\n    return this.size();\r\n  }\r\n  pop() {\r\n    const poppedValue = this.peek();\r\n    const bottom = this.size() - 1;\r\n    if (bottom > top) {\r\n      this._swap(top, bottom);\r\n    }\r\n    this._heap.pop();\r\n    this._siftDown();\r\n    return poppedValue;\r\n  }\r\n  replace(value) {\r\n    const replacedValue = this.peek();\r\n    this._heap[top] = value;\r\n    this._siftDown();\r\n    return replacedValue;\r\n  }\r\n  _greater(i, j) {\r\n    return this._comparator(this._heap[i], this._heap[j]);\r\n  }\r\n  _swap(i, j) {\r\n    [this._heap[i], this._heap[j]] = [this._heap[j], this._heap[i]];\r\n  }\r\n  _siftUp() {\r\n    let node = this.size() - 1;\r\n    while (node > top && this._greater(node, parent(node))) {\r\n      this._swap(node, parent(node));\r\n      node = parent(node);\r\n    }\r\n  }\r\n  _siftDown() {\r\n    let node = top;\r\n    while (\r\n      (left(node) < this.size() && this._greater(left(node), node)) ||\r\n      (right(node) < this.size() && this._greater(right(node), node))\r\n    ) {\r\n      let maxChild = (right(node) < this.size() && this._greater(right(node), left(node))) ? right(node) : left(node);\r\n      this._swap(node, maxChild);\r\n      node = maxChild;\r\n    }\r\n  }\r\n}\r\n\r\n","import $ from 'jquery';\r\n\r\nimport { getStartSquare, addVisited } from './common';\r\nimport Node from '../Node/Node';\r\nimport { GOAL_SQUARE, WALL_SQUARE, PATH_SQUARE } from '../components/Grid/Square/SquareType';\r\n\r\nconst dfs = (ROW_SIZE, COL_SIZE) => {\r\n\tlet counter = 0;\r\n\tconst stack = [];\r\n  const visited = [];\r\n  let path = [];\r\n\tstack.push(getStartSquare(COL_SIZE));\r\n\r\n\twhile (stack.length !== 0) {\r\n    counter++; \r\n    const currNode = stack.pop();\r\n    \r\n\t\tconst row = currNode.getRow();\r\n\t\tconst col = currNode.getCol();\r\n\t\tconst id = row * COL_SIZE + col;\r\n\r\n\t\tif ($('#' + id).attr('class') === GOAL_SQUARE) {\r\n      let temp = [];\r\n      let addNode = currNode.getParent();\r\n\r\n      while (addNode !== null) {\r\n        temp.unshift(addNode);\r\n        addNode = addNode.getParent();\r\n      }\r\n\r\n      temp.shift();\r\n\r\n      path = temp.slice();\r\n\r\n      let tempCount = counter;\r\n      temp.forEach((node, i) => {\r\n        const id = node.getRow() * COL_SIZE + node.getCol();\r\n        setTimeout(() => {\r\n          $('#' + id).addClass(PATH_SQUARE);\r\n        }, Math.floor(tempCount / 10) * 100 + i * 50);\r\n      });\r\n      \r\n\t\t\tbreak;\r\n\t\t}\r\n    \r\n    addVisited(id ,counter); \r\n\r\n\t\tvisited.push(id);\r\n\r\n\t\tconst neighbour = [\r\n\t\t\t{row: row - 1, col: col},\r\n\t\t\t{row: row, col: col - 1},\r\n\t\t\t{row: row + 1, col: col},\r\n\t\t\t{row: row, col: col + 1}\r\n\t\t];\r\n\r\n\t\tfor (let curr of neighbour) {\r\n\t\t\tlet currId = curr.row * COL_SIZE + curr.col;\r\n\t\t\tif (visited.includes(currId) \r\n\t\t\t\t\t|| ($('#' + currId).attr('class') === WALL_SQUARE) \r\n\t\t\t\t\t|| (curr.row < 0 || curr.row >= ROW_SIZE || curr.col < 0 || curr.col >= COL_SIZE)) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\telse {\r\n        const newNode = new Node(curr.row, curr.col, currId, currNode, 0, 0);\r\n\t\t\t\tstack.push(newNode);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn [Math.floor(counter / 10) * 100 + path.length * 50, visited, path];\r\n};\r\n\r\nexport default dfs;","import $ from 'jquery';\r\n\r\nimport { getStartSquare, addVisited } from './common';\r\nimport Node from '../Node/Node';\r\nimport { GOAL_SQUARE, WALL_SQUARE, PATH_SQUARE } from '../components/Grid/Square/SquareType';\r\n\r\nconst bfs = (ROW_SIZE, COL_SIZE) => {\r\n\tlet counter = 0;\r\n  const queue = [];\r\n  const queueId = []\r\n  const visited = [];\r\n  let path = [];\r\n  queue.push(getStartSquare(COL_SIZE));\r\n  queueId.push(getStartSquare(COL_SIZE).getId());\r\n\r\n\twhile (queue.length !== 0) {\r\n    counter++;\r\n\r\n    const currNode = queue.shift();\r\n\t\tconst row = currNode.getRow();\r\n\t\tconst col = currNode.getCol();\r\n    const id = row * COL_SIZE + col;\r\n    \r\n    if (visited.includes(id)) {\r\n      continue;\r\n    }  \r\n\r\n\t\tif ($('#' + id).attr('class') === GOAL_SQUARE) {\r\n      let temp = [];\r\n      let tempCount = counter;\r\n      let addNode = currNode.getParent();\r\n\r\n      while (addNode !== null) {\r\n        temp.unshift(addNode);\r\n        addNode = addNode.getParent();\r\n      }\r\n\r\n      temp.shift();\r\n      path = temp.slice();\r\n\r\n      temp.forEach((node, i) => {\r\n        const id = node.getRow() * COL_SIZE + node.getCol();\r\n        setTimeout(() => {\r\n          $('#' + id).removeClass();\r\n          $('#' + id).addClass(PATH_SQUARE);\r\n        }, Math.floor(tempCount / 10) * 100 + i * 50);\r\n      });\r\n\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\t\r\n    addVisited(id ,counter); \r\n    \r\n    visited.push(id);\r\n\r\n\t\tconst neighbour = [\r\n\t\t\t{row: row - 1, col: col},\r\n\t\t\t{row: row, col: col - 1},\r\n\t\t\t{row: row + 1, col: col},\r\n\t\t\t{row: row, col: col + 1}\r\n\t\t];\r\n\r\n\t\tfor (let curr of neighbour) {\r\n      let currId = curr.row * COL_SIZE + curr.col;\r\n\r\n      if (visited.includes(currId)\r\n          || queueId.includes(currId)\r\n          || ($('#' + currId).attr('class') === WALL_SQUARE) \r\n\t\t\t\t\t|| (curr.row < 0 || curr.row >= ROW_SIZE || curr.col < 0 || curr.col >= COL_SIZE)) {\r\n                continue;\r\n\t\t\t}\r\n\t\t\telse {\r\n        const newNode = new Node(curr.row, curr.col, currId, currNode, 0, 0);\r\n        queue.push(newNode);\r\n        queueId.push(currId);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn [Math.floor(counter / 10) * 100 + path.length * 50, visited, path];\r\n};\r\n\r\nexport default bfs;","export const BFS = 'Breadth-first Search';\r\nexport const DFS = 'Depth-first Search';\r\nexport const ASTAR = 'A* Search';\r\nexport const GREEDY = 'Greedy Best-first Search'\r\nexport const BIDIRECTIONAL = \"Bi-Directional BFS Search\"","import $ from 'jquery';\r\n\r\nimport { getStartSquare, addVisited, getGoalPosition, PriorityQueue } from './common';\r\nimport Node from '../Node/Node';\r\nimport { GOAL_SQUARE, WALL_SQUARE, PATH_SQUARE } from '../components/Grid/Square/SquareType';\r\n\r\nconst Astar = (ROW_SIZE, COL_SIZE) => {\r\n  let counter = 0;\r\n  const pqueue = new PriorityQueue((n1, n2) => n1.getTotalCost() <= n2.getTotalCost());\r\n  const visited = [];\r\n  let path = [];\r\n  const [goalRow, goalCol] = getGoalPosition(COL_SIZE);\r\n\tpqueue.push(getStartSquare(COL_SIZE));\r\n\r\n\twhile (pqueue.size() !== 0) {\r\n    counter++; \r\n    const currNode = pqueue.pop();\r\n    \r\n\t\tconst row = currNode.getRow();\r\n\t\tconst col = currNode.getCol();\r\n    const id = row * COL_SIZE + col;\r\n\r\n    if (visited.includes(id)) {\r\n      continue;\r\n    }\r\n\r\n\t\tif ($('#' + id).attr('class') === GOAL_SQUARE) {\r\n      let temp = [];\r\n      let tempCount = counter;\r\n      let addNode = currNode.getParent();\r\n\r\n      while (addNode !== null) {\r\n        temp.unshift(addNode);\r\n        addNode = addNode.getParent();\r\n      }\r\n\r\n      temp.shift();\r\n\r\n      path = temp.slice();\r\n\r\n      temp.forEach((node, i) => {\r\n        const id = node.getRow() * COL_SIZE + node.getCol();\r\n        setTimeout(() => {\r\n          $('#' + id).addClass(PATH_SQUARE);\r\n        }, Math.floor(tempCount / 10) * 100 + i * 50);\r\n      });\r\n      \r\n\t\t\tbreak;\r\n\t\t}\r\n    \r\n    addVisited(id ,counter); \r\n\r\n\t\tvisited.push(id);\r\n\r\n\t\tconst neighbour = [\r\n\t\t\t{row: row - 1, col: col},\r\n\t\t\t{row: row, col: col - 1},\r\n\t\t\t{row: row + 1, col: col},\r\n\t\t\t{row: row, col: col + 1}\r\n\t\t];\r\n\r\n\t\tfor (let curr of neighbour) {\r\n      const currId = curr.row * COL_SIZE + curr.col;\r\n\t\t\tif (visited.includes(currId) \r\n\t\t\t\t\t|| ($('#' + currId).attr('class') === WALL_SQUARE) \r\n\t\t\t\t\t|| (curr.row < 0 || curr.row >= ROW_SIZE || curr.col < 0 || curr.col >= COL_SIZE)) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\telse {\r\n        const heuristicCost = Math.abs(curr.row - goalRow) + Math.abs(curr.col - goalCol);\r\n        const newNode = new Node(curr.row, curr.col, currId, currNode, currNode.getActualCost() + 1, heuristicCost);\r\n        pqueue.push(newNode);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn [Math.floor(counter / 10) * 100 + path.length * 50, visited, path];\r\n};\r\n\r\nexport default Astar;","import $ from 'jquery';\r\n\r\nimport { getStartSquare, addVisited, getGoalPosition, PriorityQueue } from './common';\r\nimport Node from '../Node/Node';\r\nimport { GOAL_SQUARE, WALL_SQUARE, PATH_SQUARE } from '../components/Grid/Square/SquareType';\r\n\r\nconst greedyBFS = (ROW_SIZE, COL_SIZE) => {\r\n  let counter = 0;\r\n  const pqueue = new PriorityQueue((n1, n2) => n1.getTotalCost() <= n2.getTotalCost());\r\n  const visited = [];\r\n  let path = [];\r\n  const [goalRow, goalCol] = getGoalPosition(COL_SIZE);\r\n\tpqueue.push(getStartSquare(COL_SIZE));\r\n\r\n\twhile (pqueue.size() !== 0) {\r\n    counter++; \r\n    const currNode = pqueue.pop();\r\n    \r\n\t\tconst row = currNode.getRow();\r\n\t\tconst col = currNode.getCol();\r\n    const id = row * COL_SIZE + col;\r\n\r\n    if (visited.includes(id)) {\r\n      continue;\r\n    }\r\n\r\n\t\tif ($('#' + id).attr('class') === GOAL_SQUARE) {\r\n      let temp = [];\r\n      let tempCount = counter;\r\n      let addNode = currNode.getParent();\r\n\r\n      while (addNode !== null) {\r\n        temp.unshift(addNode);\r\n        addNode = addNode.getParent();\r\n      }\r\n\r\n      temp.shift();\r\n\r\n      path = temp.slice();\r\n\r\n      temp.forEach((node, i) => {\r\n        const id = node.getRow() * COL_SIZE + node.getCol();\r\n        setTimeout(() => {\r\n          $('#' + id).addClass(PATH_SQUARE);\r\n        }, Math.floor(tempCount / 10) * 100 + i * 50);\r\n      });\r\n      \r\n\t\t\tbreak;\r\n\t\t}\r\n    \r\n    addVisited(id ,counter); \r\n\r\n\t\tvisited.push(id);\r\n\r\n\t\tconst neighbour = [\r\n\t\t\t{row: row - 1, col: col},\r\n\t\t\t{row: row, col: col - 1},\r\n\t\t\t{row: row + 1, col: col},\r\n\t\t\t{row: row, col: col + 1}\r\n\t\t];\r\n\r\n\t\tfor (let curr of neighbour) {\r\n      const currId = curr.row * COL_SIZE + curr.col;\r\n\t\t\tif (visited.includes(currId) \r\n\t\t\t\t\t|| ($('#' + currId).attr('class') === WALL_SQUARE) \r\n\t\t\t\t\t|| (curr.row < 0 || curr.row >= ROW_SIZE || curr.col < 0 || curr.col >= COL_SIZE)) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\telse {\r\n        const heuristicCost = Math.abs(curr.row - goalRow) + Math.abs(curr.col - goalCol);\r\n        const newNode = new Node(curr.row, curr.col, currId, currNode, 0, heuristicCost);\r\n        pqueue.push(newNode);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn [Math.floor(counter / 10) * 100 + path.length * 50, visited, path];\r\n};\r\n\r\nexport default greedyBFS;","import $ from 'jquery';\r\n\r\nimport { getStartSquare, getGoalSquare, addVisited } from './common';\r\nimport Node from '../Node/Node';\r\nimport { WALL_SQUARE, PATH_SQUARE } from '../components/Grid/Square/SquareType';\r\n\r\nconst biDirectional = (ROW_SIZE, COL_SIZE) => {\r\n\tlet counter = 0;\r\n  const queueStart = [];\r\n  const queueGoal = [];\r\n  const queueStartId = [];\r\n  const queueGoalId = [];\r\n  const visitedStart = {};\r\n  const visitedGoal = {};\r\n  let path = [];\r\n\r\n  queueStart.push(getStartSquare(COL_SIZE));\r\n  queueGoal.push(getGoalSquare(COL_SIZE));\r\n  queueStartId.push(getStartSquare(COL_SIZE).getId());\r\n  queueGoalId.push(getStartSquare(COL_SIZE).getId());\r\n\r\n\twhile (queueStart.length !== 0 || queueGoal.length !== 0) {\r\n    let isStart = true;\r\n    counter++; \r\n    \r\n    let currNode;\r\n    if (queueStart.length !== 0 && (counter % 2 === 1 || queueGoal.length === 0)) {\r\n      currNode = queueStart.shift();\r\n    } else {\r\n      isStart = false;\r\n      currNode = queueGoal.shift();\r\n    }\r\n\r\n\t\tconst row = currNode.getRow();\r\n\t\tconst col = currNode.getCol();\r\n    const id = row * COL_SIZE + col;\r\n    console.log(id, visitedStart, visitedGoal);\r\n    \r\n    if (isStart && (id in visitedGoal)) {\r\n      let temp = [];\r\n      let tempCount = counter;\r\n      let addNode = currNode.getParent();\r\n\r\n      while (addNode !== null) {\r\n        temp.unshift(addNode);\r\n        addNode = addNode.getParent();\r\n      }\r\n\r\n      temp.shift();\r\n      // path = temp.slice();\r\n\r\n      addNode = visitedGoal[id];\r\n\r\n      while (addNode !== null) {\r\n        temp.push(addNode);\r\n        addNode = addNode.getParent();\r\n      }\r\n\r\n      temp.pop();\r\n\r\n      path = temp.slice();\r\n\r\n      temp.forEach((node, i) => {\r\n        const id = node.getRow() * COL_SIZE + node.getCol();\r\n        setTimeout(() => {\r\n          $('#' + id).removeClass();\r\n          $('#' + id).addClass(PATH_SQUARE);\r\n        }, Math.floor(tempCount / 10) * 100 + i * 50);\r\n      });\r\n\r\n      break;\r\n    } else if (!isStart && (id in visitedStart)) {\r\n      let temp = [];\r\n      let tempCount = counter;\r\n      let addNode = visitedStart[id];\r\n\r\n      while (addNode !== null) {\r\n        temp.unshift(addNode);\r\n        addNode = addNode.getParent();\r\n      }\r\n\r\n      temp.shift();\r\n\r\n      addNode = currNode;\r\n\r\n      while (addNode !== null) {\r\n        temp.push(addNode);\r\n        addNode = addNode.getParent();\r\n      }\r\n\r\n      delete temp.pop();\r\n\r\n      path = temp.slice();\r\n\r\n      temp.forEach((node, i) => {\r\n        const id = node.getRow() * COL_SIZE + node.getCol();\r\n        setTimeout(() => {\r\n          $('#' + id).removeClass();\r\n          $('#' + id).addClass(PATH_SQUARE);\r\n        }, Math.floor(tempCount / 10) * 100 + i * 50);\r\n      });\r\n\r\n      break;\r\n    }\r\n\t\t\r\n    addVisited(id ,counter); \r\n    \r\n    if (isStart) {\r\n      visitedStart[id] = currNode;\r\n    } else if (!isStart){\r\n      visitedGoal[id] = currNode;\r\n    }\r\n\r\n\t\tconst neighbour = [\r\n\t\t\t{row: row - 1, col: col},\r\n\t\t\t{row: row, col: col - 1},\r\n\t\t\t{row: row + 1, col: col},\r\n\t\t\t{row: row, col: col + 1}\r\n\t\t];\r\n\r\n\t\tfor (let curr of neighbour) {\r\n      let currId = curr.row * COL_SIZE + curr.col;\r\n      if ((isStart && queueStartId.includes(currId))\r\n          || (!isStart && queueGoalId.includes(currId))\r\n          || ($('#' + currId).attr('class') === WALL_SQUARE) \r\n\t\t\t\t\t|| (curr.row < 0 || curr.row >= ROW_SIZE || curr.col < 0 || curr.col >= COL_SIZE)) {\r\n                continue;\r\n\t\t\t}\r\n\t\t\telse {\r\n        const newNode = new Node(curr.row, curr.col, currId, currNode, 0, 0);\r\n        if (isStart) {\r\n          queueStart.push(newNode);\r\n          queueStartId.push(currId);\r\n        } else {\r\n          queueGoal.push(newNode);\r\n          queueGoalId.push(currId);\r\n        }\r\n\t\t\t}\r\n\t\t}\r\n  }\r\n  const visited = [];\r\n  for (const id in visitedStart) {\r\n    if (parseInt(id) === getStartSquare(COL_SIZE).getId()) {\r\n      continue;\r\n    }\r\n    visited.push(id);\r\n  }\r\n\r\n  for (const id in visitedGoal) {\r\n    if (parseInt(id) === getGoalSquare(COL_SIZE).getId()) {\r\n      continue;\r\n    }\r\n\r\n    visited.push(id);\r\n  }\r\n\r\n\treturn [Math.floor(counter / 10) * 100 + path.length * 50, visited, path];\r\n};\r\n\r\nexport default biDirectional;","import React, { Component } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport $ from 'jquery';\r\n\r\nimport Square from './Square/Square';\r\nimport { initializeGrid } from './Helper';\r\nimport { UNVISITED_SQUARE, VISITED_SQUARE, START_SQUARE, PATH_SQUARE, GOAL_SQUARE } from './Square/SquareType';\r\nimport dfs from '../../Algorithm/DFS';\r\nimport bfs from '../../Algorithm/BFS';\r\nimport { BFS, DFS, ASTAR, GREEDY, BIDIRECTIONAL } from '../../Algorithm/AlgoType';\r\nimport Astar from '../../Algorithm/Astar';\r\nimport greedyBFS from '../../Algorithm/GreedyBFS';\r\nimport biDirectional from '../../Algorithm/BiDirectional';\r\n\r\n\r\nconst START_ROW = 5;\r\nconst START_COL = 10;\r\nconst GOAL_ROW = 5;\r\nconst GOAL_COL = 30;\r\nconst ROW_SIZE = 11;\r\nconst COL_SIZE = 40;\r\n\r\nclass Grid extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tgrid: initializeGrid(START_ROW, START_COL, GOAL_ROW, GOAL_COL, ROW_SIZE, COL_SIZE),\r\n\t\t\tisAllowEdit: true,\r\n\t\t\tisMouseClicked: false,\r\n\t\t\tisSpecialClicked: false,\r\n\t\t\tspecialType: '', //Moving starting/target square\r\n\t\t\tspecialRow: 0,\r\n      specialCol: 0,\r\n      prevVisited: [],\r\n      prevPath: []\r\n\t\t}\r\n\t}\r\n\r\n\tonMouseDown = () => {\r\n\t\tthis.resetGrid();\r\n\t\tthis.setState({\r\n\t\t\tisMouseClicked: true\r\n\t\t});\r\n\t}\r\n\r\n\tonMouseUp = () => {\r\n\t\tthis.setState({\r\n\t\t\tisMouseClicked: false,\r\n\t\t\tisSpecialClicked: false,\r\n\t\t\tspecialType: '',\r\n\t\t\tspecialRow: 0,\r\n\t\t\tspecialCol: 0\r\n\t\t});\r\n\t}\r\n\r\n\tselectSpecial = (type, row, col) => {\r\n\t\tthis.setState({\r\n\t\t\tisSpecialClicked: true,\r\n\t\t\tspecialType: type,\r\n\t\t\tspecialRow: row,\r\n\t\t\tspecialCol: col\r\n\t\t});\r\n\t}\r\n\r\n\tmoveSpecial = (row, col) => { // Logic when moving special squares \r\n\t\tlet id = this.getId(this.state.specialRow, this.state.specialCol);\r\n\t\tlet elRef = $('#' + id);\r\n\r\n\t\telRef.removeClass(this.state.specialType);\r\n\t\tif (!elRef.attr('class')) {\r\n\t\t\telRef.addClass(UNVISITED_SQUARE);\r\n\t\t}\r\n\t\t\r\n\t\tthis.setState({\r\n\t\t\tspecialRow: row,\r\n\t\t\tspecialCol: col\r\n\t\t});\r\n\t}\r\n\r\n\tgetId = (row, col) => row * COL_SIZE + col;\r\n\r\n\tvisualize = () => {\r\n\t\tthis.resetGrid();\r\n\t\tthis.setState({\r\n\t\t\tisAllowEdit: false,\r\n    });\r\n\r\n    let [delayAnimation, visited, path] = [null, null, null];\r\n    \r\n    switch(this.props.algo) {\r\n\t\tcase ASTAR:\r\n\t\t\t[delayAnimation, visited, path] =  Astar(ROW_SIZE, COL_SIZE);\r\n\t\t\tbreak;\r\n\t\t\r\n\t\tcase GREEDY:\r\n\t\t\t[delayAnimation, visited, path] =  greedyBFS(ROW_SIZE, COL_SIZE);\r\n      break;\r\n      \r\n    case BIDIRECTIONAL:\r\n      [delayAnimation, visited, path] =  biDirectional(ROW_SIZE, COL_SIZE);\r\n      break;\r\n      \r\n\t\tcase BFS:\r\n\t\t\t[delayAnimation, visited, path] =  bfs(ROW_SIZE, COL_SIZE);\r\n\t\t\tbreak;\r\n\r\n\t\tcase DFS:\r\n\t\t\t[delayAnimation, visited, path] =  dfs(ROW_SIZE, COL_SIZE);\r\n\t\t\tbreak;\r\n      \r\n\t\tdefault:\r\n\t}\r\n\r\n\r\n\t\tsetTimeout(() => {\r\n\t\t\tthis.setState({\r\n\t\t\t\tisAllowEdit: true,\r\n        prevVisited: visited,\r\n        prevPath: path\r\n\t\t\t});\r\n\t\t}, delayAnimation);\r\n\t}\r\n\r\n\tresetGrid = () => {\r\n    const startSquare = $('.' + START_SQUARE);\r\n    const goalSquare = $('.' + GOAL_SQUARE);\r\n\r\n    startSquare.removeClass();\r\n    goalSquare.removeClass();\r\n\r\n    startSquare.addClass(START_SQUARE);\r\n    goalSquare.addClass(GOAL_SQUARE);\r\n\r\n\r\n    for (const square of this.state.prevVisited) {\r\n      $('#' + square).removeClass(VISITED_SQUARE);\r\n      if ($('#' + square).attr('class') === \"\") {\r\n        $('#' + square).addClass(UNVISITED_SQUARE);\r\n      }\r\n    }\r\n    for (const square of this.state.prevPath) {\r\n      $('#' + square.getId()).removeClass(PATH_SQUARE);\r\n    }\r\n\t}\r\n\r\n\trender() {\r\n    const style = {\r\n      textAlign: 'center',\r\n      marginTop: '20px',\r\n      width: '100%'\r\n    }\r\n\t\treturn (\r\n\t\t\t<div>\r\n        <div style={style} hidden={!this.props.algo}>\r\n          Algorithm picked: <b>{this.props.algo}</b>\r\n          <Button \r\n            disabled={!this.state.isAllowEdit}\r\n            hidden={!this.props.algo} \r\n            variant=\"primary\" \r\n            onClick={this.visualize}\r\n            style={{marginLeft: '20px', lineHeight: '1.25'}}>Visualize!\r\n          </Button>\r\n        </div>\r\n        <div style={style} hidden={this.props.algo}>\r\n          Pick an algorithm and visualize it!\r\n        </div>\r\n\r\n\t\t\t\t<table \r\n\t\t\t\t\tonMouseDown={this.state.isAllowEdit ? this.onMouseDown: null} \r\n\t\t\t\t\tonMouseUp={this.state.isAllowEdit ? this.onMouseUp: null}>\r\n\t\t\t\t\t<tbody>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.state.grid.map((row, rowIdx) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<tr key={rowIdx}>\r\n\t\t\t\t\t\t\t\t\t{row.map((square, colIdx) => {\r\n\t\t\t\t\t\t\t\t\t\treturn <Square \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trow={rowIdx}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcol={colIdx}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={(rowIdx % COL_SIZE)*COL_SIZE + colIdx} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid={(rowIdx % COL_SIZE)*COL_SIZE + colIdx} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tisMouseClicked={this.state.isMouseClicked}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tisSpecialClicked={this.state.isSpecialClicked}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tisAllowEdit={this.state.isAllowEdit}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tspecialType={this.state.specialType}\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tselectSpecial={this.selectSpecial}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmoveSpecial={this.moveSpecial}  \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgrid={this.state.grid} />\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t)})\r\n\t\t\t\t\t}\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t</table>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Grid;","import React from 'react';\r\n\r\nconst Info = () => {\r\n  return (\r\n    <ul>\r\n      <li>\r\n        <div id=\"startNode\" className=\"info\"/>\r\n        Start Node\r\n      </li>\r\n      <li>\r\n        <div id=\"goalNode\" className=\"info\"/>\r\n        Goal Node\r\n      </li>\r\n      <li>\r\n        <div id=\"unvisitedNode\" className=\"info\"/>\r\n        Unvisited Node\r\n      </li>\r\n      <li>\r\n        <div id=\"visitedNode\" className=\"info\"/>\r\n        Visited Node\r\n      </li>\r\n      <li>\r\n        <div id=\"pathNode\" className=\"info\"/>\r\n        Path Node\r\n      </li>\r\n      <li>\r\n        <div id=\"wallNode\" className=\"info\"/>\r\n        Wall Node\r\n      </li>\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default Info;","import React from 'react';\r\n\r\nimport { Navbar, NavDropdown, Nav } from 'react-bootstrap';\r\nimport { BFS, DFS, ASTAR, GREEDY, BIDIRECTIONAL } from '../../Algorithm/AlgoType';\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <Navbar expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n      <Navbar.Brand href=\".\">Pathfinding Visualizer</Navbar.Brand>\r\n        <Nav className=\"mr-auto\">\r\n          <NavDropdown title={'Algorithm'} id=\"collasible-nav-dropdown\">\r\n            <NavDropdown.Item onSelect={() => props.onSelectAlgo(ASTAR)}>{ASTAR}</NavDropdown.Item>\r\n            <NavDropdown.Item onSelect={() => props.onSelectAlgo(GREEDY)}>{GREEDY}</NavDropdown.Item>\r\n            <NavDropdown.Item onSelect={() => props.onSelectAlgo(BIDIRECTIONAL)}>{BIDIRECTIONAL}</NavDropdown.Item>\r\n            <NavDropdown.Item onSelect={() => props.onSelectAlgo(BFS)}>{BFS}</NavDropdown.Item>\r\n            <NavDropdown.Item onSelect={() => props.onSelectAlgo(DFS)}>{DFS}</NavDropdown.Item>\r\n          </NavDropdown>\r\n        </Nav>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component }from 'react';\r\nimport './App.css';\r\nimport Grid from './components/Grid/Grid';\r\nimport Info from './components/Info/Info';\r\nimport Header from './components/Header/Header';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      algo: ''\r\n    }\r\n  }\r\n\r\n  onSelectAlgo = (algo) => {\r\n    this.setState({\r\n      algo: algo\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header algo={this.state.algo} onSelectAlgo={this.onSelectAlgo}></Header>\r\n        <Info></Info>\r\n        <Grid algo={this.state.algo}></Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}